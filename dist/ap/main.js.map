{"version":3,"sources":["webpack:///./src/$_lazy_route_resource lazy namespace object","webpack:///./src/app/app.component.css","webpack:///./src/app/app.component.html","webpack:///./src/app/app.component.ts","webpack:///./src/app/app.module.ts","webpack:///./src/environments/environment.ts","webpack:///./src/main.ts"],"names":[],"mappings":";;;;;;;;;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,EAAE;AACF;AACA,4CAA4C,WAAW;AACvD;AACA;AACA,4E;;;;;;;;;;;ACZA,qBAAqB,kBAAkB,mBAAmB,KAAK,eAAe,6BAA6B,oBAAoB,qBAAqB,oBAAoB,KAAK,eAAe,qBAAqB,MAAM,uBAAuB,uCAAuC,kCAAkC,qBAAqB,8CAA8C,KAAK,C;;;;;;;;;;;ACA/X,2jB;;;;;;;;;;;;;;;;;;;;;ACA0C;AAQ1C;IANA;QAQU,gBAAW,GAAO,EAAE,CAAE;IAiBhC,CAAC;IAXK,+BAAQ,GAAR,UAAS,YAAY;QAEjB,IAAI,CAAC,GAAG,GAAG,YAAY,GAAG,IAAI,CAAC,WAAW,CAAC;IAEnD,CAAC;IAEE,wCAAiB,GAAjB;QAED,MAAM,CAAC,IAAI,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC;IAExB,CAAC;IAlBU,YAAY;QANxB,+DAAS,CAAC;YACT,QAAQ,EAAE,UAAU;;;SAGrB,CAAC;OAEW,YAAY,CAmBxB;IAAD,mBAAC;CAAA;AAnBwB;;;;;;;;;;;;;;;;;;;;;;;;;ACRqB;AACY;AACX;AACE;AAcjD;IAAA;IAAyB,CAAC;IAAb,SAAS;QAVrB,8DAAQ,CAAC;YACR,YAAY,EAAE;gBACZ,2DAAY;aACb;YACD,OAAO,EAAE;gBACP,uEAAa,EAAE,0DAAW;aAC3B;YACD,SAAS,EAAE,EAAE;YACb,SAAS,EAAE,CAAC,2DAAY,CAAC;SAC1B,CAAC;OACW,SAAS,CAAI;IAAD,gBAAC;CAAA;AAAJ;;;;;;;;;;;;;;ACjBtB;AAAA,gFAAgF;AAChF,2EAA2E;AAC3E,gEAAgE;AAEzD,IAAM,WAAW,GAAG;IACzB,UAAU,EAAE,KAAK;CAClB,CAAC;AAEF;;;;;GAKG;AACH,mEAAmE;;;;;;;;;;;;;;;;;;ACdpB;AAC4B;AAE9B;AACY;AAEzD,EAAE,CAAC,CAAC,qEAAW,CAAC,UAAU,CAAC,CAAC,CAAC;IAC3B,oEAAc,EAAE,CAAC;AACnB,CAAC;AAED,gGAAsB,EAAE,CAAC,eAAe,CAAC,yDAAS,CAAC;KAChD,KAAK,CAAC,aAAG,IAAI,cAAO,CAAC,GAAG,CAAC,GAAG,CAAC,EAAhB,CAAgB,CAAC,CAAC","file":"main.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./src/$$_lazy_route_resource lazy recursive\";","module.exports = \"* {\\r\\n    margin: 0;\\r\\n    padding: 0;\\r\\n}\\r\\n\\r\\ninput {\\r\\n    font: 1em sans-serif;\\r\\n    color: #777;\\r\\n    width: 240px;\\r\\n   margin: 20px;\\r\\n}\\r\\n\\r\\nselect{\\r\\n    margin: 20px; \\r\\n}\\r\\n\\r\\nselect + input{\\r\\n    background: rgb(106, 105, 209);\\r\\n    color: rgb(239, 240, 233);\\r\\n    width: 100px;\\r\\n    border: 1px solid  rgb(106, 105, 209);\\r\\n}\"","module.exports = \"\\n\\n  <p>\\n      <input type=\\\"search\\\"  [(ngModel)]=\\\"searchQuery\\\" placeholder=\\\"Введите текст для поиска\\\" >    \\n      <select  (change)=\\\"onChange($event.target.value)\\\">\\n         <option value=\\\"\\\" >Выберите поисковую систему</option>\\n         <option value=\\\"https://google.com/search?q=\\\">Google</option>\\n         <option value=\\\"https://bing.com?q=\\\">Bing</option>\\n         <option value=\\\"https://ask.com/web?q=\\\">Ask</option>\\n         </select>\\n      <input type=\\\"submit\\\" value=\\\"Искать\\\" (click)=\\\"redirectAndSearch()\\\">\\n  </p>\\n\\n\"","import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\n\nexport class AppComponent  {\n\n          searchQuery:any = \"\" ;\n\n          searchEngine :any;\n\n          url:any;\n  \n      onChange(searchEngine) {\n\n          this.url = searchEngine + this.searchQuery;\n \n  }\n  \n     redirectAndSearch() {\n    \n    window.open(this.url);\n      \n  }\n}\n  \n  \n","import { NgModule }      from '@angular/core';\nimport { BrowserModule } from '@angular/platform-browser';\nimport { FormsModule }   from '@angular/forms';\nimport { AppComponent }   from './app.component';\n\n\n\n@NgModule({\n  declarations: [\n    AppComponent\n  ],\n  imports: [\n    BrowserModule, FormsModule\n  ],\n  providers: [],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build ---prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * In development mode, for easier debugging, you can ignore zone related error\n * stack frames such as `zone.run`/`zoneDelegate.invokeTask` by importing the\n * below file. Don't forget to comment it out in production mode\n * because it will have a performance impact when errors are thrown\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.log(err));\n"],"sourceRoot":""}